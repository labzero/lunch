{
  "name": "web",
  "version": "1.0.0",
  "private": true,
  "engines": {
    "node": ">=8.1",
    "npm": ">=3.10"
  },
  "browserslist": [">1%", "last 4 versions", "Firefox ESR", "not ie < 9"],
  "dependencies": {
    "@babel/polyfill": "7.0.0-beta.36",
    "bcrypt": "^1.0.3",
    "bluebird": "^3.5.1",
    "body-parser": "^1.18.2",
    "classnames": "^2.2.5",
    "common-password": "^0.1.2",
    "compression": "^1.6.1",
    "connect-flash": "^0.1.1",
    "connect-session-sequelize": "^4.1.0",
    "cookie-parser": "^1.4.3",
    "core-js": "^2.5.3",
    "cors": "^2.8.3",
    "dotenv": "^2.0.0",
    "eventemitter3": "^1.2.0",
    "express": "^4.16.2",
    "express-jwt": "^5.3.0",
    "express-session": "^1.15.2",
    "express-sslify": "^1.2.0",
    "express-ws": "^3.0.0",
    "fastclick": "^1.0.6",
    "fbjs": "^0.8.4",
    "fetch-mock": "^5.9.4",
    "google-map-react": "^0.28.0",
    "history": "^4.7.2",
    "honeybadger": "^1.1.3",
    "immutability-helper": "^2.1.2",
    "isomorphic-fetch": "^2.2.1",
    "isomorphic-style-loader": "^4.0.0",
    "jsonwebtoken": "^8.1.0",
    "method-override": "^2.3.8",
    "moment": "^2.11.2",
    "morgan": "^1.8.1",
    "node-fetch": "^1.7.3",
    "normalizr": "^3.2.2",
    "passport": "^0.4.0",
    "passport-google-oauth20": "^1.0.0",
    "passport-local": "^1.0.0",
    "pg": "^6.1.0",
    "pg-native": "^1.10.0",
    "pretty-error": "^2.1.1",
    "prop-types": "^15.6.0",
    "query-string": "^5.0.1",
    "react": "^16.2.0",
    "react-addons-shallow-compare": "^15.4.2",
    "react-autosuggest": "^9.3.1",
    "react-bootstrap": "^0.31.0",
    "react-dom": "^16.2.0",
    "react-flip-move": "^3.0.1",
    "react-geosuggest": "^2.7.0",
    "react-intl": "^2.3.0",
    "react-redux": "^5.0.6",
    "react-scroll": "^1.7.6",
    "react-transition-group": "^1.2.0",
    "redux": "^3.7.2",
    "redux-logger": "^3.0.6",
    "redux-thunk": "^2.2.0",
    "request": "^2.71.0",
    "reselect": "^2.3.0",
    "reserved-usernames": "^1.0.3",
    "resolve-url-loader": "^2.0.2",
    "robust-websocket": "^0.2.1",
    "rotating-file-stream": "^1.2.1",
    "sendgrid": "^5.2.3",
    "sequelize": "^4.28.6",
    "sequelize-cli": "^3.2.0",
    "serialize-javascript": "^1.3.0",
    "source-map-support": "^0.5.0",
    "sqlite3": "^3.1.13",
    "universal-router": "^5.0.0",
    "uuid": "^3.0.1",
    "whatwg-fetch": "^2.0.3"
  },
  "devDependencies": {
    "@babel/core": "7.0.0-beta.36",
    "@babel/node": "7.0.0-beta.36",
    "@babel/plugin-transform-modules-commonjs": "7.0.0-beta.36",
    "@babel/plugin-transform-react-constant-elements": "7.0.0-beta.36",
    "@babel/plugin-transform-react-inline-elements": "7.0.0-beta.36",
    "@babel/preset-env": "7.0.0-beta.36",
    "@babel/preset-flow": "7.0.0-beta.36",
    "@babel/preset-react": "7.0.0-beta.36",
    "@babel/preset-stage-2": "7.0.0-beta.36",
    "@babel/register": "7.0.0-beta.36",
    "assets-webpack-plugin": "^3.5.1",
    "autoprefixer": "^7.2.3",
    "babel-core": "^7.0.0-0",
    "babel-eslint": "8.2.1",
    "babel-loader": "8.0.0-beta.0",
    "babel-plugin-istanbul": "^4.1.5",
    "babel-plugin-react-transform": "^2.0.2",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.12",
    "babel-preset-env": "^1.5.2",
    "babel-preset-react": "^6.24.1",
    "babel-preset-react-optimize": "^1.0.1",
    "babel-preset-stage-2": "^6.24.1",
    "babel-template": "^6.25.0",
    "babel-types": "^6.25.0",
    "bootstrap-sass": "^3.3.7",
    "browser-sync": "^2.21.0",
    "chai": "4.1.2",
    "chokidar": "^1.7.0",
    "cross-env": "^5.0.1",
    "css-loader": "^0.28.7",
    "custom-event-polyfill": "^0.3.0",
    "del": "^2.2.2",
    "editorconfig-tools": "^0.1.1",
    "enzyme": "^3.2.0",
    "enzyme-adapter-react-16": "^1.0.0",
    "es6-promise": "^4.1.0",
    "eslint": "^4.14.0",
    "eslint-config-airbnb": "^16.1.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-import-resolver-node": "^0.3.1",
    "eslint-loader": "^1.9.0",
    "eslint-plugin-css-modules": "^2.7.5",
    "eslint-plugin-flowtype": "^2.40.1",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-react": "^7.5.1",
    "extend": "^3.0.0",
    "file-loader": "^1.1.6",
    "git-repository": "^0.1.4",
    "glob": "^7.1.2",
    "husky": "^0.14.3",
    "identity-obj-proxy": "^3.0.0",
    "json-loader": "^0.5.4",
    "lint-staged": "^6.0.0",
    "markdown-it": "^8.4.0",
    "mkdirp": "^0.5.1",
    "mocha": "^5.0.0",
    "node-sass": "^4.5.0",
    "npm-run-all": "^4.1.2",
    "null-loader": "^0.1.1",
    "nyc": "^11.4.1",
    "pixrem": "^4.0.1",
    "pleeease-filters": "^4.0.0",
    "postcss": "^6.0.14",
    "postcss-calc": "^6.0.1",
    "postcss-color-function": "^4.0.1",
    "postcss-custom-media": "^6.0.0",
    "postcss-custom-properties": "^6.2.0",
    "postcss-custom-selectors": "^4.0.1",
    "postcss-flexbugs-fixes": "^3.2.0",
    "postcss-global-import": "^1.0.0",
    "postcss-import": "^11.0.0",
    "postcss-loader": "^2.0.9",
    "postcss-media-minmax": "^3.0.0",
    "postcss-nested": "^3.0.0",
    "postcss-nesting": "^4.2.1",
    "postcss-pseudoelements": "^5.0.0",
    "postcss-selector-matches": "^3.0.1",
    "postcss-selector-not": "^3.0.1",
    "prettier": "^1.9.2",
    "proxyquire": "^1.7.11",
    "puppeteer": "^1.1.1",
    "raw-loader": "^0.5.1",
    "react-deep-force-update": "^2.1.1",
    "react-dev-utils": "^4.2.1",
    "react-error-overlay": "^4.0.0",
    "react-hot-loader": "^3.0.0-beta.7",
    "react-test-renderer": "^16.2.0",
    "redux-mock-store": "^1.5.1",
    "rimraf": "^2.6.2",
    "sass-loader": "^6.0.6",
    "sequelize-mock": "^0.7.0",
    "sinon": "^4.2.0",
    "style-loader": "^0.13.2",
    "stylelint": "^8.4.0",
    "stylelint-config-standard": "^18.0.0",
    "stylelint-order": "^0.8.0",
    "supertest": "^3.0.0",
    "svg-url-loader": "^2.3.1",
    "url-loader": "^0.6.2",
    "webpack": "^3.10.0",
    "webpack-bundle-analyzer": "^2.9.1",
    "webpack-dev-middleware": "^2.0.3",
    "webpack-hot-middleware": "^2.21.0",
    "webpack-node-externals": "^1.6.0"
  },
  "lint-staged": {
    "*.{js,jsx}": ["eslint --no-ignore --fix", "git add --force"],
    "*.{json,md,graphql}": ["prettier --write", "git add --force"],
    "*.{css,less,styl,scss,sass,sss}": ["stylelint --fix", "git add --force"]
  },
  "scripts": {
    "precommit": "npm run test && lint-staged",
    "lint-js": "eslint --ignore-path .gitignore --ignore-pattern \"!**/.*\" .",
    "lint-css": "stylelint \"src/**/*.{css,less,styl,scss,sass,sss}\"",
    "lint": "npm run lint-js && npm run lint-css",
    "fix-js": "npm run lint-js --fix",
    "fix-css": "npm run lint-css --fix",
    "fix": "npm run fix-js && npm run fix-css",
    "test":
      "mocha \"test/helper.js\" \"src/**/*.test.js\" --require @babel/register --require test/setup.js --exit",
    "test-watch": "npm run test --watch --notify",
    "db:create": "./node_modules/.bin/sequelize db:create",
    "db:seed:all": "./node_modules/.bin/sequelize db:seed:all",
    "db:migrate": "./node_modules/.bin/sequelize db:migrate",
    "db:migrate:undo:all": "./node_modules/.bin/sequelize db:migrate:undo:all",
    "db:drop": "./node_modules/.bin/sequelize db:drop",
    "test-cover": "nyc npm run test",
    "integration-setup":
      "npm-run-all db:migrate:undo:all db:migrate db:seed:all build",
    "integration":
      "cross-env NODE_ENV=test npm-run-all integration-setup -r -p serve integration-test",
    "integration-ci": "NODE_ENV=test npm-run-all -r -p serve integration-test",
    "integration-test":
      "npm run integration-test-file \"./test/integration/**/*.spec.js\"",
    "integration-file":
      "cross-env NODE_ENV=test npm-run-all integration-setup -r -p serve \"integration-test-file {1}\" --",
    "integration-test-file": "mocha --opts \"./test/integration.opts\"",
    "coverage": "npm run test-cover && open coverage/lcov-report/index.html",
    "clean": "babel-node tools/run clean",
    "copy": "babel-node tools/run copy",
    "bundle": "babel-node tools/run bundle",
    "build": "babel-node tools/run build",
    "build-stats": "npm run build --release --analyse",
    "deploy": "babel-node tools/run deploy",
    "render": "babel-node tools/run render",
    "serve": "babel-node tools/run runServer || true",
    "start": "babel-node tools/run start"
  }
}
